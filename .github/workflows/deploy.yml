name: Deploy to Docker

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx (optional)
        uses: docker/setup-buildx-action@v3


      - name: Set up SSH
        run: |
          echo "$PRIVATE_KEY" > id_rsa
          chmod 600 id_rsa.pem
          eval $(ssh-agent -s)
          ssh-add id_rsa.pem

      - name: Deploy to server
        run: |
          ssh -p 2222 user@your_server_ip "deploy-command"
        env:
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Generate entrypoint.sh for Airflow
        run: |
          mkdir -p airflow
          echo '#!/bin/bash' > airflow/entrypoint.sh
          echo 'airflow db init' >> airflow/entrypoint.sh
          echo '' >> airflow/entrypoint.sh
          echo 'airflow users create \\' >> airflow/entrypoint.sh
          echo '    --username airflow \\' >> airflow/entrypoint.sh
          echo '    --password airflow \\' >> airflow/entrypoint.sh
          echo '    --firstname Admin \\' >> airflow/entrypoint.sh
          echo '    --lastname User \\' >> airflow/entrypoint.sh
          echo '    --role Admin \\' >> airflow/entrypoint.sh
          echo '    --email admin@example.com || true' >> airflow/entrypoint.sh
          echo '' >> airflow/entrypoint.sh
          echo 'exec airflow webserver' >> airflow/entrypoint.sh
          chmod +x airflow/entrypoint.sh

      - name: Deploy using Docker Compose
        run: |
          docker compose down || true
          docker compose up -d --build
          
      - name: Debug Secrets (safe)
        run: |
          [[ -z "${{ secrets.AWS_ACCESS_KEY_ID }}" ]] && echo "❌ AWS_ACCESS_KEY_ID missing" || echo "✅ AWS_ACCESS_KEY_ID ok"
          [[ -z "${{ secrets.AWS_SECRET_ACCESS_KEY }}" ]] && echo "❌ AWS_SECRET_ACCESS_KEY missing" || echo "✅ AWS_SECRET_ACCESS_KEY ok"
          [[ -z "${{ secrets.AWS_REGION }}" ]] && echo "❌ AWS_REGION missing" || echo "✅ AWS_REGION ok"
          [[ -z "${{ secrets.S3_BUCKET_NAME }}" ]] && echo "❌ S3_BUCKET_NAME missing" || echo "✅ S3_BUCKET_NAME ok"
