name: Deploy to Docker

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx (optional)
        uses: docker/setup-buildx-action@v3

      - name: Set up SSH
        run: |
          echo "$PRIVATE_KEY" > id_rsa
          chmod 600 id_rsa
          eval $(ssh-agent -s)
          ssh-add id_rsa
        env:
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Deploy to server
        run: |
            ssh -i id_rsa -p 2222 -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
            set -e
        
            cd ~/voice-clone
        
            git reset --hard
            git clean -fd
            git pull origin main
        
            mkdir -p airflow
        
            # ✅ 파일을 직접 줄바꿈 포함해 생성
            printf '%s\n' '#!/bin/bash' \
            'airflow db init' \
            '' \
            'airflow users create \' \
            '  --username airflow \' \
            '  --password airflow \' \
            '  --firstname Admin \' \
            '  --lastname User \' \
            '  --role Admin \' \
            '  --email admin@example.com || true' \
            '' \
            'exec airflow webserver' > airflow/entrypoint.sh
        
            chmod +x airflow/entrypoint.sh

            docker compose -f docker-compose-airflow.yml -f docker-compose-postgres.yml -f docker-compose-fastapi.yml down --remove-orphans
        
            docker compose -f docker-compose-postgres.yml -f docker-compose-airflow.yml -f docker-compose-fastapi.yml up -d --build
            EOF
        env:
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
